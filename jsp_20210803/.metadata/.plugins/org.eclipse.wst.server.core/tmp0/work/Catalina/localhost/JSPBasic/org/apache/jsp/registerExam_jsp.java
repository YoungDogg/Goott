/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.69
 * Generated at: 2021-07-27 07:59:21 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class registerExam_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("\r\n");
      out.write("<head>\r\n");
      out.write("    <title>회원가입</title>\r\n");
      out.write("    <meta charset=\"utf-8\">\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css\">\r\n");
      out.write("    <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js\"></script>\r\n");
      out.write("    <script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js\"></script>\r\n");
      out.write("    <script>\r\n");
      out.write("        // 가입 버튼을 누르면 아래의 조건에 따라 유효성 검사(데이터가 유효한지?)를 하고, \r\n");
      out.write("        // 유효하면 34_registerSub.html 페이지에 데이터를 전송한다.\r\n");
      out.write("        // 유효하지 않은 데이터가 나오면 에러 메시지를 띄운다(db에 저장 x)\r\n");
      out.write("\r\n");
      out.write("        // 아이디 : 4자 이상 8자 이하 필수(소문자로 저장)\r\n");
      out.write("        // 비밀번호 : 4자 이상 12자 이하 필수, 비밀번호 확인과 동일할것\r\n");
      out.write("        // 이름 : 필수 항목(중간의 공백이 없도록 저장한다)\r\n");
      out.write("        // 이메일 : 이메일 주소 형식인지 아닌지 검사\r\n");
      out.write("        // 휴대전화 : 전화번호 형식인지 아닌지 검사\r\n");
      out.write("        // 가입 조항 동의에 반드시 체크가 되어 있을 것.\r\n");
      out.write("\r\n");
      out.write("        function idCheck(userId) {\r\n");
      out.write("            // 아이디 검증 \r\n");
      out.write("            // 검증 ok : true, 검증 실패 : false \r\n");
      out.write("            let result = false; // 아이디 검증 실패 가정...\r\n");
      out.write("\r\n");
      out.write("            if (userId == \"\") {\r\n");
      out.write("                document.getElementById(\"iderror\").innerHTML = \"아이디는 필수 항목입니다.\";\r\n");
      out.write("                document.getElementById(\"userId\").focus();\r\n");
      out.write("            } else if (userId.length < 4 || userId.length > 8) {\r\n");
      out.write("                document.getElementById(\"iderror\").innerHTML = \"아이디는 4자 이상 8자 이하로 입력해 주세요\";\r\n");
      out.write("                document.getElementById(\"userId\").focus();\r\n");
      out.write("            } else {\r\n");
      out.write("                document.getElementById(\"iderror\").innerHTML = \"<img src='img/check.png' width='10%' />\";\r\n");
      out.write("                result = true;\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            return result;\r\n");
      out.write("\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        // 비밀 번호 검증\r\n");
      out.write("        function pwdCheck(userPwd, userPwd2) {\r\n");
      out.write("            // 검증 ok : true, 검증 실패 : false \r\n");
      out.write("            let result = false; // 검증 실패 가정...\r\n");
      out.write("            if (userPwd == \"\") {\r\n");
      out.write("                document.getElementById(\"pwderror\").innerHTML = \"비밀번호는 필수 항목입니다.\";\r\n");
      out.write("                document.getElementById(\"userPwd\").focus();\r\n");
      out.write("            } else if (userPwd.length < 4 || userPwd.length > 12) {\r\n");
      out.write("                document.getElementById(\"pwderror\").innerHTML = \"비밀번호는 4자 이상 12자 이하로 입력해 주세요\";\r\n");
      out.write("                document.getElementById(\"userPwd\").focus();\r\n");
      out.write("            } else if (userPwd != userPwd2) {\r\n");
      out.write("                document.getElementById(\"pwderror\").innerHTML = \"비밀번호가 서로 맞지 않습니다.\";\r\n");
      out.write("                document.getElementById(\"userPwd2\").value = \"\";\r\n");
      out.write("                document.getElementById(\"userPwd\").focus();\r\n");
      out.write("            } else {\r\n");
      out.write("                document.getElementById(\"pwderror\").innerHTML = \"<img src='img/check.png' width='10%' />\";\r\n");
      out.write("                result = true;\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            return result;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("        function nameCheck(userName) {\r\n");
      out.write("            let result = false;\r\n");
      out.write("            if (userName == \"\") {\r\n");
      out.write("                document.getElementById(\"nameerror\").innerHTML = \"이름은 필수 입니다.\";\r\n");
      out.write("                document.getElementById(\"userName\").focus();\r\n");
      out.write("            } else {\r\n");
      out.write("                document.getElementById(\"nameerror\").innerHTML = \"\";\r\n");
      out.write("                result = true;\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            return result;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        function validate() {\r\n");
      out.write("            let isCheckOk = false; // flag변수\r\n");
      out.write("\r\n");
      out.write("            let userId = document.getElementById(\"userId\").value.toLowerCase();\r\n");
      out.write("            console.log(userId);\r\n");
      out.write("            let idCheckResult = idCheck(userId);\r\n");
      out.write("\r\n");
      out.write("            let userPwd = document.getElementById(\"userPwd\").value;\r\n");
      out.write("            let userPwd2 = document.getElementById(\"userPwd2\").value;\r\n");
      out.write("            let pwdCheckResult = pwdCheck(userPwd, userPwd2);\r\n");
      out.write("\r\n");
      out.write("            let userName = document.getElementById(\"userName\").value;\r\n");
      out.write("            let nameCheckResult = nameCheck(userName);\r\n");
      out.write("            if (nameCheckResult) {\r\n");
      out.write("                userName = userName.replace(/\\s/gi, \"\"); // 이름에서 공백 제거\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            // 성별 가져오기\r\n");
      out.write("            let genders = document.getElementsByName(\"gender\");\r\n");
      out.write("            let gender = \"\";\r\n");
      out.write("            for (let i in genders) {\r\n");
      out.write("                if (genders[i].checked) {\r\n");
      out.write("                    gender = genders[i].value;\r\n");
      out.write("                }\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            // 생일 가져오기\r\n");
      out.write("            let birthDay = document.getElementById(\"birthDay\").value;\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("            // 이메일 체크\r\n");
      out.write("            let email = document.getElementById(\"email\").value;\r\n");
      out.write("            let emailCheckResult = emailCheck(email);\r\n");
      out.write("\r\n");
      out.write("            // 전화번호 체크\r\n");
      out.write("            let mobile = document.getElementById(\"mobile\").value;\r\n");
      out.write("            let mobileCheckResult = mobileCheck(mobile);\r\n");
      out.write("\r\n");
      out.write("            // 가입경로\r\n");
      out.write("            let registerPathSelect = document.getElementById(\"registerPath\");\r\n");
      out.write("            let registerPath = registerPathSelect.options[registerPathSelect.selectedIndex].value;\r\n");
      out.write("\r\n");
      out.write("            // 주소\r\n");
      out.write("            let addr = document.getElementById(\"addr\").value;\r\n");
      out.write("\r\n");
      out.write("            // 가입 조항 동의\r\n");
      out.write("            let isAgree = false;\r\n");
      out.write("            if (document.getElementById(\"agree\").checked) {\r\n");
      out.write("                isAgree = true;\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            // 전체 유효성 검증에 모두 통과 했다면....\r\n");
      out.write("            if (idCheckResult && pwdCheckResult && nameCheckResult && emailCheckResult && mobileCheckResult && isAgree) {\r\n");
      out.write("                isCheckOk = true;\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            return isCheckOk;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        function mobileCheck(mobile) {\r\n");
      out.write("            let result = false;\r\n");
      out.write("            if (mobile.length > 0) {\r\n");
      out.write("                let regExp = /^\\d{3}-\\d{3,4}-\\d{4}$/;\r\n");
      out.write("                if (mobile.match(regExp) != null) {\r\n");
      out.write("                    // 전화번호 형식\r\n");
      out.write("                    result = true;\r\n");
      out.write("                    document.getElementById(\"mobileerror\").innerHTML = \"\";\r\n");
      out.write("                } else {\r\n");
      out.write("                    document.getElementById(\"mobileerror\").innerHTML = \"전화번호 형식이 아닙니다\";\r\n");
      out.write("                    document.getElementById(\"mobile\").focus();\r\n");
      out.write("                }\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            return result;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        function emailCheck(email) {\r\n");
      out.write("            let result = false;\r\n");
      out.write("            if (email.length > 0) {\r\n");
      out.write("                let regExp = /[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*@[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*.[a-zA-Z]$/i;\r\n");
      out.write("\r\n");
      out.write("                if (email.match(regExp) != null) {\r\n");
      out.write("                    // 이메일 주소 형식이다.\r\n");
      out.write("                    result = true;\r\n");
      out.write("                    document.getElementById(\"emailerror\").innerHTML = \"\";\r\n");
      out.write("                } else {\r\n");
      out.write("                    document.getElementById(\"emailerror\").innerHTML = \"이메일 주소 형식이 아닙니다\";\r\n");
      out.write("                    document.getElementById(\"email\").focus();\r\n");
      out.write("                }\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            return result;\r\n");
      out.write("        }\r\n");
      out.write("    </script>\r\n");
      out.write("    <style>\r\n");
      out.write("        .error {\r\n");
      out.write("            color: red;\r\n");
      out.write("        }\r\n");
      out.write("    </style>\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("    <div id=\"wrap\" class=\"container abc\">\r\n");
      out.write("        <h3>회 원 가 입</h3>\r\n");
      out.write("        <form>\r\n");
      out.write("            <div class=\"form-group\">\r\n");
      out.write("                <label for=\"userId\">아이디:</label>\r\n");
      out.write("                <input type=\"text\" class=\"form-control\" id=\"userId\" placeholder=\"Enter ID\" name=\"userId\"> <span\r\n");
      out.write("                    id=\"iderror\" class=\"error\"></span>\r\n");
      out.write("            </div>\r\n");
      out.write("\r\n");
      out.write("            <div class=\"form-group\">\r\n");
      out.write("                <label for=\"userPwd\">비밀번호 :</label>\r\n");
      out.write("                <input type=\"password\" class=\"form-control\" id=\"userPwd\" placeholder=\"Enter password\"\r\n");
      out.write("                    name=\"userPwd\"><span id=\"pwderror\" class=\"error\"></span>\r\n");
      out.write("            </div>\r\n");
      out.write("\r\n");
      out.write("            <div class=\"form-group\">\r\n");
      out.write("                <label for=\"userPwd2\">비밀번호 확인 :</label>\r\n");
      out.write("                <input type=\"password\" class=\"form-control\" id=\"userPwd2\" placeholder=\"Enter password\">\r\n");
      out.write("            </div>\r\n");
      out.write("\r\n");
      out.write("            <div class=\"form-group\">\r\n");
      out.write("                <label for=\"userName\">이름 :</label>\r\n");
      out.write("                <input type=\"text\" class=\"form-control\" id=\"userName\" placeholder=\"Enter Name\" name=\"userName\"><span\r\n");
      out.write("                    id=\"nameerror\" class=\"error\"></span>\r\n");
      out.write("            </div>\r\n");
      out.write("\r\n");
      out.write("            <div class=\"radio\">\r\n");
      out.write("                <label><input type=\"radio\" name=\"gender\" value=\"female\">여성</label>\r\n");
      out.write("            </div>\r\n");
      out.write("\r\n");
      out.write("            <div class=\"radio\">\r\n");
      out.write("                <label><input type=\"radio\" name=\"gender\" value=\"male\">남성</label>\r\n");
      out.write("            </div>\r\n");
      out.write("\r\n");
      out.write("            <div class=\"form-group\">\r\n");
      out.write("                <label for=\"birthDay\">생일 : </label><input type=\"date\" id=\"birthDay\" name=\"birthDay\" />\r\n");
      out.write("            </div>\r\n");
      out.write("\r\n");
      out.write("            <div class=\"form-group\">\r\n");
      out.write("                <label for=\"email\">이메일 :</label>\r\n");
      out.write("                <input type=\"text\" class=\"form-control\" id=\"email\" placeholder=\"Enter email\" name=\"email\"><span\r\n");
      out.write("                    id=\"emailerror\" class=\"error\"></span>\r\n");
      out.write("            </div>\r\n");
      out.write("\r\n");
      out.write("            <div class=\"form-group\">\r\n");
      out.write("                <label for=\"mobile\">전화번호 :</label>\r\n");
      out.write("                <input type=\"text\" class=\"form-control\" id=\"mobile\" placeholder=\"Enter mobile\" name=\"mobile\"><span\r\n");
      out.write("                    id=\"mobileerror\" class=\"error\"></span>\r\n");
      out.write("            </div>\r\n");
      out.write("\r\n");
      out.write("            <div class=\"form-group\">\r\n");
      out.write("                <label for=\"registerPath\">가입경로 :</label>\r\n");
      out.write("                <select id=\"registerPath\" name=\"registerPath\">\r\n");
      out.write("                    <option value=\"friend\">지인</option>\r\n");
      out.write("                    <option value=\"internet\">인터넷</option>\r\n");
      out.write("                    <option value=\"paper\">전단지</option>\r\n");
      out.write("                    <option value=\"cf\">광고</option>\r\n");
      out.write("                </select>\r\n");
      out.write("            </div>\r\n");
      out.write("\r\n");
      out.write("            \r\n");
      out.write("            <div class=\"checkbox\">\r\n");
      out.write("                <label><input type=\"checkbox\" name=\"agree\" id=\"agree\">가입 조항에 동의합니다</label>\r\n");
      out.write("            </div>\r\n");
      out.write("\r\n");
      out.write("            <button type=\"submit\" class=\"btn btn-success\" onclick=\"return validate();\">Submit</button>\r\n");
      out.write("            <button type=\"reset\" class=\"btn btn-warning\">Cancel</button>\r\n");
      out.write("        </form>\r\n");
      out.write("        \r\n");
      out.write("        <img src=\"image/check.png\" />\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("    \r\n");
      out.write("</body>\r\n");
      out.write("\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
